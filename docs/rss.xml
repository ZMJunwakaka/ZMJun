<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>鄭明君のブログ</title><link>https://ZMJunwakaka.github.io/ZMJun</link><description>C# Learning Blog</description><copyright>鄭明君のブログ</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/80440497?v=4</url><title>avatar</title><link>https://ZMJunwakaka.github.io/ZMJun</link></image><lastBuildDate>Fri, 11 Oct 2024 13:11:29 +0000</lastBuildDate><managingEditor>鄭明君のブログ</managingEditor><ttl>60</ttl><webMaster>鄭明君のブログ</webMaster><item><title>20241011Newtonsoft.Json使用</title><link>https://ZMJunwakaka.github.io/ZMJun/post/20241011Newtonsoft.Json-shi-yong.html</link><description>### 1.序列化成json串&#13;
```C#&#13;
using Newtonsoft.Json;&#13;
namespace ConsoleAppTest1011&#13;
{&#13;
    internal class Program&#13;
    {&#13;
        static void Main(string[] args)&#13;
        {&#13;
            Dictionary&lt;string, string&gt; dictionary = ResponseMethod('鲁B16F0H');&#13;
            Console.WriteLine(dictionary.ToArray()[0]); &#13;
            Console.WriteLine(dictionary['filter']); &#13;
        }&#13;
&#13;
        static Dictionary&lt;string, string&gt; ResponseMethod(string plateNo)&#13;
        {&#13;
            Dictionary&lt;string, string&gt; SGparam = new Dictionary&lt;string, string&gt;&#13;
            {&#13;
                { 'filter',JsonConvert.SerializeObject(&#13;
                    new {&#13;
                        PlateNo=plateNo&#13;
                    }&#13;
                    )&#13;
                }&#13;
            };&#13;
            return SGparam;&#13;
        }&#13;
    }&#13;
}&#13;
```&#13;
![image](https://github.com/user-attachments/assets/80010625-8c64-4e9c-b42a-099b2940b466)&#13;
。</description><guid isPermaLink="true">https://ZMJunwakaka.github.io/ZMJun/post/20241011Newtonsoft.Json-shi-yong.html</guid><pubDate>Fri, 11 Oct 2024 06:28:13 +0000</pubDate></item><item><title>20241011排查二次驶入鉴权失败bug</title><link>https://ZMJunwakaka.github.io/ZMJun/post/20241011-pai-cha-er-ci-shi-ru-jian-quan-shi-bai-bug.html</link><description>### 1.根据车牌号找到订单编号&#13;
![image](https://github.com/user-attachments/assets/734dd806-f308-429b-ae5c-52fe0be5af3a)&#13;
### 2.根据订单编号查询状态流转上下文信息&#13;
![image](https://github.com/user-attachments/assets/e31b5547-8962-4949-b71c-73cd9f78451c)&#13;
### 3.根据上下文信息通过代码排查PMS模块中代码bug。</description><guid isPermaLink="true">https://ZMJunwakaka.github.io/ZMJun/post/20241011-pai-cha-er-ci-shi-ru-jian-quan-shi-bai-bug.html</guid><pubDate>Fri, 11 Oct 2024 03:33:58 +0000</pubDate></item><item><title>20241010停车取车状态流程学习</title><link>https://ZMJunwakaka.github.io/ZMJun/post/20241010-ting-che-qu-che-zhuang-tai-liu-cheng-xue-xi.html</link><description>![image](https://github.com/user-attachments/assets/3db583d9-0593-4e09-b0c0-7325968a2785)&#13;
&#13;
### 首先熟悉缓冲车位状态上报，任务完成，请求任务，执行存车取车，（消防不用管，挪车先不考虑）&#13;
### 查看PMS对应代码&#13;
&#13;
ParkingVehicleInBusiness 请求驶入，创建订单&#13;
&#13;
ParkingVehicleInResultBusiness 驶入结果，判断订单是否正确&#13;
&#13;
ParkingStateChangedBusiness (存车取车)处理订单流程、无车-有车、新建-已驶入缓冲车位、对中条件检查：下发对中（没有下发对中查看该日志）&#13;
&#13;
ASVParkingTaskExecBusiness 存车（该日志看是否已存车）&#13;
&#13;
&#13;
ASVTaskCompleteBusiness 任务完成失败事件（姿态对中后，存车code，取车）&#13;
&#13;
ASVTaskRequestContext 设备请求任务&#13;
&#13;
&#13;
PickupVehicleRequestBusiness 用户申请取车，排队 ，排队后下发设备请求任务&#13;
&#13;
ASVPickupTaskExecBusiness 执行取车任务  状态扭转为待取车&#13;
&#13;
ParkingStateChangedBusiness 取车流程中，扭转成已取车&#13;
&#13;
ParkingVehicleOutResultBusiness 驶出结果，订单完成或取消，不需要鉴权。</description><guid isPermaLink="true">https://ZMJunwakaka.github.io/ZMJun/post/20241010-ting-che-qu-che-zhuang-tai-liu-cheng-xue-xi.html</guid><pubDate>Thu, 10 Oct 2024 07:46:29 +0000</pubDate></item><item><title>test</title><link>https://ZMJunwakaka.github.io/ZMJun/post/test.html</link><description>test。</description><guid isPermaLink="true">https://ZMJunwakaka.github.io/ZMJun/post/test.html</guid><pubDate>Mon, 07 Oct 2024 10:53:56 +0000</pubDate></item></channel></rss>